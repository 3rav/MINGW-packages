
_realname=kdenlive
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=23.08.5
pkgrel=1
pkgdesc="A non-linear video editor for Linux using the MLT video framework (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://krita.org/"
license=("spdx:GPL-3.0-only")
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-extra-cmake-modules"
  "${MINGW_PACKAGE_PREFIX}-qt5-tools"
)
depends=(
  "${MINGW_PACKAGE_PREFIX}-qt5-multimedia"
  "${MINGW_PACKAGE_PREFIX}-qt5-networkauth"
  "${MINGW_PACKAGE_PREFIX}-qt5-quickcontrols2"
  "${MINGW_PACKAGE_PREFIX}-qt5-svg"
  "${MINGW_PACKAGE_PREFIX}-karchive-qt5"
  "${MINGW_PACKAGE_PREFIX}-kbookmarks-qt5"
  "${MINGW_PACKAGE_PREFIX}-kcompletion-qt5"
  "${MINGW_PACKAGE_PREFIX}-kconfig-qt5"
  "${MINGW_PACKAGE_PREFIX}-kconfigwidgets-qt5"
  "${MINGW_PACKAGE_PREFIX}-kcoreaddons-qt5"
  "${MINGW_PACKAGE_PREFIX}-kcrash-qt5"
  "${MINGW_PACKAGE_PREFIX}-kdbusaddons-qt5"
  "${MINGW_PACKAGE_PREFIX}-kdeclarative-qt5"
  "${MINGW_PACKAGE_PREFIX}-kfilemetadata-qt5"
  "${MINGW_PACKAGE_PREFIX}-kguiaddons-qt5"
  "${MINGW_PACKAGE_PREFIX}-ki18n-qt5"
  "${MINGW_PACKAGE_PREFIX}-kiconthemes-qt5"
  "${MINGW_PACKAGE_PREFIX}-kio-qt5"
  "${MINGW_PACKAGE_PREFIX}-kitemviews-qt5"
  "${MINGW_PACKAGE_PREFIX}-kjobwidgets-qt5"
  "${MINGW_PACKAGE_PREFIX}-knewstuff-qt5"
  "${MINGW_PACKAGE_PREFIX}-knotifications-qt5"
  "${MINGW_PACKAGE_PREFIX}-knotifyconfig-qt5"
  "${MINGW_PACKAGE_PREFIX}-kplotting-qt5"
  "${MINGW_PACKAGE_PREFIX}-kservice-qt5"
  "${MINGW_PACKAGE_PREFIX}-ktextwidgets-qt5"
  "${MINGW_PACKAGE_PREFIX}-kwidgetsaddons-qt5"
  "${MINGW_PACKAGE_PREFIX}-kxmlgui-qt5"
  "${MINGW_PACKAGE_PREFIX}-purpose-qt5"
  "${MINGW_PACKAGE_PREFIX}-kcodecs-qt5"
  "${MINGW_PACKAGE_PREFIX}-knotifyconfig-qt5"
  "${MINGW_PACKAGE_PREFIX}-solid-qt5"
  "${MINGW_PACKAGE_PREFIX}-breeze-icons-qt5"
  "${MINGW_PACKAGE_PREFIX}-mlt"
  "${MINGW_PACKAGE_PREFIX}-frei0r-plugins"
  "${MINGW_PACKAGE_PREFIX}-shared-mime-info"
)
optdepends=(
  "${MINGW_PACKAGE_PREFIX}-ffmpeg: For FFmpeg plugin"
  "${MINGW_PACKAGE_PREFIX}-mediainfo: For technical clip information"
  "${MINGW_PACKAGE_PREFIX}-opencv: For motion tracking"
)
source=("https://download.kde.org/stable/release-service/${pkgver}/src/${_realname}-${pkgver}.tar.xz")

sha256sums=('9ae96458e6a257c323f9845341410a140740260f3f8971ce35004de5161a83db')

apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Nbp1 -i "${srcdir}/$_patch"
  done
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a _extra_config
  if check_option "debug" "n"; then
    _extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    _extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -GNinja \
    "${_extra_config[@]}" \
    -DBUILD_TESTING="OFF" \
    -DBUILD_QCH="OFF" \
    -DKDE_INSTALL_USE_QT_SYS_PATHS="OFF" \
    -DQT_MAJOR_VERSION=5 \
    ../${_realname}-${pkgver}

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR=${pkgdir} ${MINGW_PREFIX}/bin/cmake.exe --install .

  # Move documentation to the correct location
  rm -rf "${pkgdir}${MINGW_PREFIX}/bin/data/doc"
  install -vDm 644 ${srcdir}/${_realname}-${pkgver}/{AUTHORS,README.md} -t "${pkgdir}${MINGW_PREFIX}/share/doc/$_realname/"  
  install -vDm 644 ${srcdir}/${_realname}-${pkgver}/LICENSES/* -t "${pkgdir}${MINGW_PREFIX}/share/licenses/$_realname/"
}
