# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=libmysofa
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.3
pkgrel=1
pkgdesc="Reader for AES SOFA files to get better HRTFs (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://github.com/hoene/libmysofa/"
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-cunit"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkg-config"
             "${MINGW_PACKAGE_PREFIX}-cc")
license=('BSD')
source=("${_realname}-${pkgver}.tar.gz::https://github.com/hoene/libmysofa/archive/v${pkgver}.tar.gz"
        001-mingw-dont-use-nuget.patch
        002-fix-exports.patch
        004-fix-dllexport-attribute.patch
        005-add-cflag-private-for-staticlib.patch)
sha256sums=('12dcc4108222b2a98170fbdce5e498285e3f0bbed08ff6bc722ae96662f3ed09'
            'f7c1f72dac366fd11502cf7176aa5133075f39b0e375522d00fc1cb827189378'
            'b233686c910d184bfaf7423e0d01fec301eff17f3fdfa595b45742a098d93a92'
            '3ae83ed75c9efb6048461aba4bceab8dab382f9a842c507a6090da8c7c7782ec'
            '665bd53bfe3cdface288553ebd1b8d07e78762475add4971413a5703790ea045')

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  patch -p1 -i ${srcdir}/001-mingw-dont-use-nuget.patch
  patch -p1 -i ${srcdir}/002-fix-exports.patch
  patch -p1 -i ${srcdir}/004-fix-dllexport-attribute.patch
  patch -p1 -i ${srcdir}/005-add-cflag-private-for-staticlib.patch
}

build() {
  [[ -d "${srcdir}"/build-${CARCH} ]] && rm -rf "${srcdir}"/build-${CARCH}
  mkdir -p "${srcdir}"/build-${CARCH} && cd "${srcdir}"/build-${CARCH}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"Ninja" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DBUILD_SHARED_LIBS=ON \
    "../${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cmake.exe --build ./
}

package() {
  cd "${srcdir}"/build-${CARCH}
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake.exe --build ./ --target install

  mkdir -p ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}
  cp ${srcdir}/${_realname}-${pkgver}/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/
}
