diff -urN src_orig/Makefile_mingw_i8 src/Makefile_mingw_i8
--- src_orig/Makefile_mingw_i8	1970-01-01 01:00:00.000000000 +0100
+++ src/Makefile_mingw_i8	2023-07-29 16:50:50.385143000 +0200
@@ -0,0 +1,56 @@
+OPT = -O2 -m64 -march=nocona -msahf -mtune=generic
+
+#Specify where to store the generated .o files
+OBJDIR = ccx_i8
+
+CFLAGS = -Wall $(OPT) -fopenmp -DARCH="Linux" -DPARDISO -DARPACK -DMATRIXSTORAGE -DUSE_MT=1 -DNETWORKOUT -DCALCULIX_EXTERNAL_BEHAVIOURS_SUPPORT -I$(MKL_include) -fcommon
+FFLAGS = -Wall $(OPT) -fopenmp -I$(MKL_include) -fallow-argument-mismatch 
+
+CFLAGS += -DINTSIZE64
+FFLAGS += -fdefault-integer-8
+
+#SPOOLES
+CFLAGS+= -I ${MINGW_PREFIX}/include/spooles -DSPOOLES
+
+CC=CC
+FC=gfortran
+
+#Source files in this folder and in the adapter directory
+$(OBJDIR)/%.o : %.c
+	$(CC) $(CFLAGS) -c $< -o $@
+$(OBJDIR)/%.o : %.f
+	$(FC) $(FFLAGS) -c $< -o $@
+
+include Makefile.inc
+
+SCCXMAIN = ccx_$(CCX_VERSION).c
+
+OCCXF = $(SCCXF:%.f=$(OBJDIR)/%.o)
+OCCXC = $(SCCXC:%.c=$(OBJDIR)/%.o)
+OCCXMAIN = $(SCCXMAIN:%.c=$(OBJDIR)/%.o)
+
+LDFLAGS = -lspoolesMT -lspooles
+
+MKL_lib=../../../mkl-2024.0.0.data/data/Library/bin
+MKL_include=../../../mkl_include-2024.0.0.data/data/Library/include
+#https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl/link-line-advisor.html
+
+LIBS = -lopenblas_64 \
+       $(MKL_lib)/mkl_rt.2.dll
+
+$(OBJDIR)/$(OBJDIR).exe: $(OBJDIR) $(OCCXMAIN) $(OBJDIR)/ccx_$(CCX_VERSION).a
+	 ./date.pl; $(CC) $(CFLAGS) -static-libgcc -static-libgfortran -static-libstdc++ \
+	 -Wl,-Bstatic -lm -lcrypt -lpthread -lwinpthread -lgomp -lquadmath -lstdc++ -c $(SCCXMAIN);
+	 $(FC) $(FFLAGS) -static-libgcc -static-libgfortran -static-libgcc -static-libstdc++ \
+	 -Wl,-Bstatic -lm -lpthread -lstdc++ \
+	 -Wl,-Bstatic,--whole-archive -lwinpthread -lgomp -lquadmath -larpack_64 \
+	 -Wl,--no-whole-archive -o $@ $(OCCXMAIN) $(OBJDIR)/ccx_$(CCX_VERSION).a -lopenblas_64 $(LIBS) $(LDFLAGS)
+
+$(OBJDIR)/ccx_$(CCX_VERSION).a: $(OCCXF) $(OCCXC)
+	ar vr $@ $?
+
+$(OBJDIR):
+	mkdir -p $(OBJDIR)
+
+clean:
+	rm -f $(OBJDIR)/*.o $(OBJDIR)/ccx_$(CCX_VERSION).a $(OBJDIR)/ccx_$(OBJDIR).exe
diff -urN src_orig/Makefile_mingw src/Makefile_mingw_i4
--- src_orig/Makefile_mingw_i4	1970-01-01 01:00:00.000000000 +0100
+++ src/Makefile_mingw_i4	2023-07-29 16:51:02.635467100 +0200
@@ -0,0 +1,53 @@
+OPT = -O2 -m64 -march=nocona -msahf -mtune=generic
+
+#Specify where to store the generated .o files
+OBJDIR = ccx_i4
+
+CFLAGS = -Wall $(OPT) -fopenmp -DARCH="Linux" -DPARDISO -DARPACK -DMATRIXSTORAGE -DUSE_MT=1 -DNETWORKOUT -DCALCULIX_EXTERNAL_BEHAVIOURS_SUPPORT -I$(MKL_include) -fcommon
+FFLAGS = -Wall $(OPT) -fopenmp -I$(MKL_include) -fallow-argument-mismatch 
+
+#SPOOLES
+CFLAGS+= -I ${MINGW_PREFIX}/include/spooles -DSPOOLES
+
+CC=gcc
+FC=gfortran
+
+#Source files in this folder and in the adapter directory
+$(OBJDIR)/%.o : %.c
+	$(CC) $(CFLAGS) -c $< -o $@
+$(OBJDIR)/%.o : %.f
+	$(FC) $(FFLAGS) -c $< -o $@
+
+include Makefile.inc
+
+SCCXMAIN = ccx_$(CCX_VERSION).c
+
+OCCXF = $(SCCXF:%.f=$(OBJDIR)/%.o)
+OCCXC = $(SCCXC:%.c=$(OBJDIR)/%.o)
+OCCXMAIN = $(SCCXMAIN:%.c=$(OBJDIR)/%.o)
+
+LDFLAGS = -lspoolesMT -lspooles
+
+MKL_lib=../../../mkl-2024.0.0.data/data/Library/bin
+MKL_include=../../../mkl_include-2024.0.0.data/data/Library/include
+#https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl/link-line-advisor.html
+
+LIBS = -lopenblas \
+       $(MKL_lib)/mkl_rt.2.dll
+
+$(OBJDIR)/$(OBJDIR).exe: $(OBJDIR) $(OCCXMAIN) $(OBJDIR)/ccx_$(CCX_VERSION).a
+	 ./date.pl; $(CC) $(CFLAGS) -static-libgcc -static-libgfortran -static-libstdc++ \
+	 -Wl,-Bstatic -lm -lcrypt -lpthread -lwinpthread -lgomp -lquadmath -lstdc++ -c $(SCCXMAIN);
+	 $(FC) $(FFLAGS) -static-libgcc -static-libgfortran -static-libgcc -static-libstdc++ \
+	 -Wl,-Bstatic -lm -lpthread -lstdc++ \
+	 -Wl,-Bstatic,--whole-archive -lwinpthread -lgomp -lquadmath -larpack \
+	 -Wl,--no-whole-archive -o $@ $(OCCXMAIN) $(OBJDIR)/ccx_$(CCX_VERSION).a -lopenblas $(LIBS) $(LDFLAGS)
+
+$(OBJDIR)/ccx_$(CCX_VERSION).a: $(OCCXF) $(OCCXC)
+	ar vr $@ $?
+
+$(OBJDIR):
+	mkdir -p $(OBJDIR)
+
+clean:
+	rm -f $(OBJDIR)/*.o $(OBJDIR)/ccx_$(CCX_VERSION).a $(OBJDIR)/ccx_$(OBJDIR).exe
diff -urN src_orig/ccx_2.21.c src/ccx_2.21.c
--- src_orig/ccx_2.21.c	2023-07-29 10:52:01.000000000 +0200
+++ src/ccx_2.21.c	2023-07-29 16:47:06.838731000 +0200
@@ -15,10 +15,6 @@
 /*     along with this program; if not, write to the Free Software       */
 /*     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.         */
 
-#ifdef __WIN32
-_set_output_format(_TWO_DIGIT_EXPONENT);
-#endif
-
 #ifdef CALCULIX_MPI
 #include <spoolesMPI.h>
 #endif
@@ -37,6 +33,10 @@
 
 int main(int argc,char *argv[])
 {
+	
+#if defined(_WIN32) && !defined(_UCRT)
+_set_output_format(_TWO_DIGIT_EXPONENT);
+#endif
   
   FILE *f1;
     
diff -urN src_orig/ccx_2.21step.c src/ccx_2.21step.c
--- src_orig/ccx_2.21step.c	2023-07-29 10:52:01.000000000 +0200
+++ src/ccx_2.21step.c	2023-07-29 17:05:22.548207900 +0200
@@ -15,10 +15,6 @@
 /*     along with this program; if not, write to the Free Software       */
 /*     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.         */
 
-#ifdef __WIN32
-_set_output_format(_TWO_DIGIT_EXPONENT);
-#endif
-
 #ifdef CALCULIX_MPI
 #include <spoolesMPI.h>
 #endif
@@ -44,6 +40,10 @@
                   ITG *inputsteps,ITG *iperturb,ITG *irstrt,char **filabp,
                   ITG *nlabel)
 {
+	
+#if defined(_WIN32) && !defined(_UCRT)
+_set_output_format(_TWO_DIGIT_EXPONENT);
+#endif
 
   /* in FORTRAN convention:
 
diff -urN src_orig/pardiso.c src/pardiso.c
--- src_orig/pardiso.c	2023-07-29 10:49:53.000000000 +0200
+++ src/pardiso.c	2023-07-29 17:06:32.810872800 +0200
@@ -34,6 +34,50 @@
 ITG mthread_mkl=0;
 char envMKL[32];
 
+
+/* Added by Victor Kemp 2022-11-18 to enable Out-Of-Core (OOC) mode. */
+void initialize_iparm(ITG *symmetryflag){
+
+  ITG i;
+  char *env;
+
+  // Most values are 0
+  for(i=0;i<=63;i++){
+    iparm[i]=0;
+  }
+
+  // iparm(1) = 1 means all other values are specified instead of being defaults.
+  iparm[0]=1;
+
+  // Non-zero default values
+  iparm[1]=2;
+  if(*symmetryflag==0){
+    iparm[9]=8;
+    iparm[10]=0;
+    iparm[12]=0;
+  }else{
+    iparm[9]=13;
+    iparm[10]=1;
+    iparm[12]=1;
+  }    
+  iparm[17]=-1;
+  iparm[20]=1;
+
+  // iparm(60)
+  env=getenv("MKL_PARDISO_OOC_MAX_CORE_SIZE");
+  if(env) {
+    // PARDISO chooses IC/OOC (In-Core / Out-Of-Core) mode according to the
+    // environment variables
+    // MKL_PARDISO_OOC_MAX_CORE_SIZE and
+    // MKL_PARDISO_OOC_MAX_SWAP_SIZE.
+    iparm[59]=1;
+  }else{
+    // Default. IC mode only.
+    iparm[59]=0;
+  }
+
+}
+
 void pardiso_factor(double *ad, double *au, double *adb, double *aub, 
 		    double *sigma,ITG *icol, ITG *irow, 
 		    ITG *neq, ITG *nzs, ITG *symmetryflag, ITG *inputformat,
@@ -55,6 +99,10 @@
 
   iparm[0]=0;
   iparm[1]=3;
+  
+  /* Added by Victor Kemp 2022-11-18 to enable Out-Of-Core (OOC) mode. */
+  initialize_iparm(symmetryflag);
+  
   /* set MKL_NUM_THREADS to min(CCX_NPROC_EQUATION_SOLVER,OMP_NUM_THREADS)
      must be done once  */
   if (mthread_mkl == 0) {
diff -urN src_orig/uamplitude.f src/uamplitude.f
--- src_orig/uamplitude.f	2023-07-29 10:49:53.000000000 +0200
+++ src/uamplitude.f	2023-07-29 16:55:06.310789300 +0200
@@ -33,11 +33,31 @@
       implicit none
 !
       character*80 name
+      integer(4) time2
 !
-      real*8 time,amplitude
+      real*8 time,amplitude,pi
 !
       if(name(1:9).eq.'QUADRATIC') then
          amplitude=time**2
+      else if(name(1:3).eq.'SIN') then
+         pi=4.d0*datan(1.d0)
+         amplitude=sin(time*pi/2)
+      else if(name(1:4).eq.'QSIN') then
+         pi=4.d0*datan(1.d0)
+         amplitude=sin(time*pi/2)**2
+      else if(name(1:6).eq.'ABSSIN') then
+         pi=4.d0*datan(1.d0)
+         amplitude=abs(sin(time*pi/2))
+      else if(name(1:3).eq.'COS') then
+         pi=4.d0*datan(1.d0)
+         amplitude=cos(time*pi/2)
+      else if(name(1:7).eq.'ONEZERO') then
+         time2=time
+	     if(modulo(time2,2).eq.0) THEN
+	        amplitude=(time-time2)	
+            else		
+                amplitude=1-(time-time2)
+	     endif
       else
          write(*,*) '*ERROR in uamplitude: unknown amplitude'
          call exit(201)
