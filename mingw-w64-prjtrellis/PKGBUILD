# Maintainer: umarcor <unai.martinezcorral@ehu.eus>

_realname=prjtrellis
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=1.2.1
pkgrel=1
pkgdesc="Documenting the Lattice ECP5 bit-stream format (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
url="https://github.com/YosysHQ/prjtrellis"
license=('spdx:MIT')
groups=("${MINGW_PACKAGE_PREFIX}-eda")
depends=(
  "${MINGW_PACKAGE_PREFIX}-boost"
  "${MINGW_PACKAGE_PREFIX}-python"
)
makedepends=(
  "${MINGW_PACKAGE_PREFIX}-boost"
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-cmake"
  "git"
)

_commit_db='35d900a94ff0db152679a67bf6e4fbf40ebc34aa'

source=("${_realname}-${pkgver}.tar.gz"::"https://github.com/YosysHQ/prjtrellis/archive/refs/tags/${pkgver}.tar.gz"
        "${_realname}-db"::"git+https://github.com/YosysHQ/prjtrellis-db.git#commit=${_commit_db}")
sha256sums=('561f7881dc6d39c7ac47721e19aed533c230b47a684aa9a0c3dae08cdc3d8dbb'
            'SKIP')

prepare () {
  cd "${srcdir}/${_realname}-db"
  cp -r * "${srcdir}/${_realname}-${pkgver}/database/"
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"/libtrellis

  MSYS2_ARG_CONV_EXCL='-DCMAKE_INSTALL_PREFIX=' cmake \
    -G "MSYS Makefiles" \
    -DCMAKE_PREFIX_PATH=${MINGW_PREFIX} \
    -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
    .
  make
}

check() {
  cd "${srcdir}/${_realname}-${pkgver}"/libtrellis
  for item in ecpbram ecpmulti ecppack ecppll ecpunpack; do
    echo "> Check $item"
    ./"$item" --help
  done
}

package() {
  cd "${srcdir}/${_realname}-${pkgver}"/libtrellis
  make DESTDIR="${pkgdir}" install

  install -Dm644 "${srcdir}/${_realname}-${pkgver}"/COPYING "${pkgdir}${MINGW_PREFIX}"/share/licenses/${_realname}/LICENSE
}
