# Maintainer: Chris Gorman <chrisjohgorman@gmail.com>

_realname=gnuradio
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=3.11.0.0git.r790.g0491c2d5e
pkgrel=1
pkgdesc="General purpose DSP and SDR toolkit (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://gnuradio.org/'
license=(GPL3)
depends=("${MINGW_PACKAGE_PREFIX}-codec2"
	"${MINGW_PACKAGE_PREFIX}-gcc-libs"
	"${MINGW_PACKAGE_PREFIX}-gmp"
	"${MINGW_PACKAGE_PREFIX}-gsl"
	"${MINGW_PACKAGE_PREFIX}-gsm"
	"${MINGW_PACKAGE_PREFIX}-libad9361-iio"
	"${MINGW_PACKAGE_PREFIX}-libuhd" 
	"${MINGW_PACKAGE_PREFIX}-libunwind"
	"${MINGW_PACKAGE_PREFIX}-mathjax2"
	"${MINGW_PACKAGE_PREFIX}-volk"
	"${MINGW_PACKAGE_PREFIX}-python-click"
	"${MINGW_PACKAGE_PREFIX}-python-click-plugins"
	"${MINGW_PACKAGE_PREFIX}-python-jsonschema"
	"${MINGW_PACKAGE_PREFIX}-python-mako"
	"${MINGW_PACKAGE_PREFIX}-python-matplotlib"
	"${MINGW_PACKAGE_PREFIX}-python-numpy"
	"${MINGW_PACKAGE_PREFIX}-python-pygccxml"
	"${MINGW_PACKAGE_PREFIX}-python-pyaml" 
	"${MINGW_PACKAGE_PREFIX}-python-pyzmq"
	"${MINGW_PACKAGE_PREFIX}-python-scipy"
	"${MINGW_PACKAGE_PREFIX}-python-qtpy"
	"${MINGW_PACKAGE_PREFIX}-SDL"
	"${MINGW_PACKAGE_PREFIX}-soapysdr"
	"${MINGW_PACKAGE_PREFIX}-spdlog")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-cppzmq"
             "${MINGW_PACKAGE_PREFIX}-doxygen"
             "${MINGW_PACKAGE_PREFIX}-fftw"
             "${MINGW_PACKAGE_PREFIX}-gtk3"
             "${MINGW_PACKAGE_PREFIX}-libiio"
             "${MINGW_PACKAGE_PREFIX}-libsndfile"
             "${MINGW_PACKAGE_PREFIX}-portaudio"
             "${MINGW_PACKAGE_PREFIX}-pybind11"
             "${MINGW_PACKAGE_PREFIX}-python-cairo"
             "${MINGW_PACKAGE_PREFIX}-python-gobject"
             "${MINGW_PACKAGE_PREFIX}-python-packaging"
             "${MINGW_PACKAGE_PREFIX}-python-pip"
             "${MINGW_PACKAGE_PREFIX}-python-pyqt5"
             "${MINGW_PACKAGE_PREFIX}-python-pyqtgraph"
             "${MINGW_PACKAGE_PREFIX}-python-pytest" # only required for tests
             "${MINGW_PACKAGE_PREFIX}-qt5-base"
             "${MINGW_PACKAGE_PREFIX}-qwt-qt5"
             "${MINGW_PACKAGE_PREFIX}-zeromq"
             'git')
_commit='0491c2d5ef6a0189fb2d569df51cad21520f76a0'
checkdepends=("${MINGW_PACKAGE_PREFIX}-python-jsonschema"
              "${MINGW_PACKAGE_PREFIX}-python-setuptools")
source=("${_realname}"::"git+https://github.com/${_realname}/${_realname}.git#commit=${_commit}"
        0001-gnuradio-runtime_dll_ws2_32.patch
        0002-Using-os.path.join-is-unnecessary-as-get_cofig_file_.patch
        0003-Removing-the-use-of-os.path.join-when-getting-the-pa.patch
        0004-Add-.py-extension-for-gr_filter_design-so-it-will-la.patch
        0005-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch
        0006-numpy-2.0.patch)

# FIXME restore use of pgp keys once we have a build from a tar ball
#validpgpkeys=(
#  'B90DDFAC56989BF62262EB812987C77CBB8ED9B2'  # GNU Radio Project (Admin) <admin@gnuradio.org>
#  'D74F9F146E7F755783583158B343B2BA293E5174'  # Marcus MÃ¼ller (GNU Radio Maintainer) <mmueller@gnuradio.org>
#  '723EC3A2B90533C6B93DFBC8ED797743F7951435'  # GNU Radio (Software Signing Key) <info@gnuradio.org>
#)
sha256sums=('7c0fa9e883ae78be629ce3a2275f1e306ea73ed5f4b7ff247d5361b4d1a62f42'
            '8df2e42946763d840cc2fb333dd00c8861a317159617e4de1a8a03e91d396101'
            'd9276b5f8361081d08ae6b92ca98ccffd898f38e8599526d9af28c4e743701a5'
            'cd53127099e66926a6afd4010754910611b658edeb95bef446c17c3b2e218c83'
            'f888e4874307054ca982bcb0c6db100bd261c20432cf8ce1b33d51f47d12b4a5'
            'aa9c79f6ab923c566f57d90117fa7e82549c26230538ffb3a2b1c0246fc31c19'
            'e3a2d9f63318b56f87829d224232724d9c815b46c6c7086ac3c5b6ae8980bc7b')
 
pkgver() {
  cd "${srcdir}/${_realname}"

  git describe --long "${_commit}" | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//g'
}

prepare() {
  cd "${srcdir}/${_realname}"

  patch -Np1 -i "${srcdir}/0002-Using-os.path.join-is-unnecessary-as-get_cofig_file_.patch"
  patch -Np1 -i "${srcdir}/0003-Removing-the-use-of-os.path.join-when-getting-the-pa.patch"
  patch -Np1 -i "${srcdir}/0004-Add-.py-extension-for-gr_filter_design-so-it-will-la.patch"
  #FIXME - the next patch changes python files to executables.  It was stolen from Ryan Volz
  # radioconda package.  Unfortunately the binaries error and exit.  If a solution is found 
  # that fixes this, remove patch 0005 and add patch 0006
  #patch -Np1 -i "${srcdir}/0005-cmake-Install-python-wrapper-exe-for-scripts-on-Wind.patch"
  patch -Np1 -i "${srcdir}/0006-numpy-2.0.patch"
}

build() {
    
  # FIXME remove -DENABLE_CTRLPORT_THRIFT=OFF when issue 7390 is fixed
  # https://github.com/gnuradio/gnuradio/issues/7390

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      -DCMAKE_BUILD_TYPE=Release \
      -DBoost_ATOMIC_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_atomic-mt.dll" \
      -DBoost_CHRONO_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_chrono-mt.dll" \
      -DBoost_DATE_TIME_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_date_time-mt.dll" \
      -DBoost_PROGRAM_OPTIONS_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_program_options-mt.dll" \
      -DBoost_REGEX_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_regex-mt.dll" \
      -DBoost_SYSTEM_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_system-mt.dll" \
      -DBoost_THREAD_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_thread-mt.dll" \
      -DBoost_UNIT_TEST_FRAMEWORK_LIBRARY_RELEASE="${MINGW_PREFIX}/bin/libboost_unit_test_framework-mt.dll" \
      -DENABLE_CTRLPORT_THRIFT=OFF \
      -S "${_realname}" \
      -DMATHJAX2_JS_PATH="${MINGW_PREFIX}/share/mathjax2" \
      -B "build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}"
}

check() {
  "${MINGW_PREFIX}"/bin/cmake.exe --build "build-${MSYSTEM}" --target test || warning "Tests failed"
}

package() {
  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install "build-${MSYSTEM}"
 
  # Repair paths in grc.conf to use windows paths via sed, grep and cygpath
  #Invert slashes from back slash to forward slash
  sed -i 's/\\/\//g' "${pkgdir}${MINGW_PREFIX}/etc/gnuradio/conf.d/grc.conf"

  #Make global_blocks_path use windows directory naming using cygpath
  gbp=$(grep global_blocks_path "${pkgdir}${MINGW_PREFIX}/etc/gnuradio/conf.d/grc.conf");
  gbpv=$(printf '%s\n' "${gbp}" | cut -d = -f2);
  replace_gbpv=$(cygpath.exe -w $gbpv);
  escaped_replace_gbpv=$(printf '%s\n' "${replace_gbpv}" | sed -e 's/[]\/$*.^[]/\\&/g');
  sed -i 's@'"${gbpv}"'@'\ ${escaped_replace_gbpv}'@' "${pkgdir}${MINGW_PREFIX}/etc/gnuradio/conf.d/grc.conf"

  #Make examples_path use windows directory naming using cygpath
  ep=$(grep examples_path "${pkgdir}${MINGW_PREFIX}/etc/gnuradio/conf.d/grc.conf");
  epv=$(printf '%s\n' "${ep}" | cut -d = -f2);
  replace_epv=$(cygpath.exe -w $epv);
  escaped_replace_epv=$(printf '%s\n' "${replace_epv}" | sed -e 's/[]\/$*.^[]/\\&/g');
  sed -i 's@'"${epv}"'@'\ ${escaped_replace_epv}'@' "${pkgdir}${MINGW_PREFIX}/etc/gnuradio/conf.d/grc.conf"

  install -Dm644 "${srcdir}/${_realname}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
}
