# Maintainer: Michael Hansen <zrax0111 gmail com>

_realname=unicorn
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-unicorn")
#         "${MINGW_PACKAGE_PREFIX}-python-unicorn")
_rc=-rc5
_basever=2.0.0
pkgver=${_basever}${_rc//-/}
pkgrel=2
pkgdesc="A lightweight multi-platform, multi-architecture CPU emulator framework based on QEMU (mingw-w64)"
url='https://www.unicorn-engine.org/index.html'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32')
license=('GPL2')
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-python-setuptools")
source=("${_realname}-${pkgver}.tar.gz::https://github.com/unicorn-engine/unicorn/archive/${_basever}${_rc}.tar.gz")
sha512sums=('3b5118e378872a50d3aa0dca01cda69b0e7b3875da7b03c1708963848c71818dd1e120df8796acace661c6b4d63813b9acc8106ce3a94c0d40c3b50677fbaacd')

prepare() {
  cd "${_realname}-${_basever}${_rc}"
  mkdir -p build
  cd build
  cmake .. -DCMAKE_INSTALL_PREFIX=/usr
}

build() {
  cd "${_realname}-${_basever}${_rc}/build"
  make
  #(cd ../bindings/python
  #  ${MINGW_PREFIX}/bin/python setup.py build
  #)
}

check() {
  cd "${_realname}-${_basever}${_rc}/build"
  make test
}

package_unicorn() {
  cd "${_realname}-${_basever}${_rc}/build"

  make DESTDIR="${pkgdir}" install
  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING"
  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING.LGPL2" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.LGPL2"
  install -Dm644 "${srcdir}/${_realname}-${_basever}${_rc}/COPYING_GLIB" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING_GLIB"
}

# package_python-unicorn() {
#   depends=("${MINGW_PACKAGE_PREFIX}-python" "${MINGW_PACKAGE_PREFIX}-unicorn")
#   provides=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
#   conflicts=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
#   replaces=("${MINGW_PACKAGE_PREFIX}-python3-${_realname}")
  
#   cd "${_realname}-${_basever}${_rc}/bindings/python"

#   MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
#   ${MINGW_PREFIX}/bin/python setup.py install --root="${pkgdir}" --prefix="${MINGW_PREFIX}" \
#     -O1 --skip-build

#   install -Dm 644 sample* shellcode.py -t "${pkgdir}${MINGW_PREFIX}/share/doc/python-${_realname}/samples"
# }

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
