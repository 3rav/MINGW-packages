# Maintainer: Johannes Schindelin <johannes.schindelin@gmx.de>

_realname=jj
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-docs")
pkgver=0.9.0
pkgrel=2
pkgdesc="Jujutsu (an experimental VCS) (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64' 'clang32')
msys2_references=(
  'aur: jujutsu'
)
url="https://github.com/martinvonz/jj"
license=('spdx:Apache-2.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-rust")
source=("${_realname}-${pkgver}.tar.gz::${url}/archive/refs/tags/v${pkgver}.tar.gz")
sha256sums=('e9a96a840387910124edff477cbc05171acabc31c3436e14afaced96c7bda902')

prepare() {
  cd "${srcdir}/${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cargo fetch --locked
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cargo build \
    --release \
    --frozen \
    --all-features

  for _shell in bash fish zsh; do
    ./target/release/jj util completion "--${_shell}" > "jj.${_shell}"
  done
}

check() {
  cd "${srcdir}/${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cargo test \
    --release \
    --frozen \
    --all-features
}

package_jj() {
  cd "${srcdir}/${_realname}-${pkgver}"

  ${MINGW_PREFIX}/bin/cargo install \
    --frozen \
    --offline \
    --no-track \
    --path cli \
    --root "${pkgdir}${MINGW_PREFIX}" \
    --all-features
  
  # used for internal testing
  rm ${pkgdir}${MINGW_PREFIX}/bin/fake*

  install -Dm644 LICENSE "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
  install -Dm644 jj.bash "${pkgdir}${MINGW_PREFIX}/share/bash-completion/completions/jj"
  install -Dm644 jj.fish "${pkgdir}${MINGW_PREFIX}/share/fish/vendor_completions.d/jj.fish"
  install -Dm644 jj.zsh "${pkgdir}${MINGW_PREFIX}/share/zsh/site-functions/_jj"
}

package_jj-docs() {
  pkgdesc+=" (documentation)"

  cd "${srcdir}/${_realname}-${pkgver}"

  install -Dm644 README.md "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}/README.md"
  cp -r docs "${pkgdir}${MINGW_PREFIX}/share/doc/${_realname}"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
