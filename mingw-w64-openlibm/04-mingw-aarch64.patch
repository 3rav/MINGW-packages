From 3d4a902f316d20a6c8c26b21fedc79d564e68cab Mon Sep 17 00:00:00 2001
From: jeremyd2019 <github@jdrake.com>
Date: Thu, 9 Sep 2021 21:09:04 -0700
Subject: [PATCH] Fixes for Windows ARM64 (#251)

* aarch64_fpmath.h: deal with LLP64 (Windows ARM64)

use uint64_t instead of unsigned long, as unsigned long is only 32 bits on Windows

* Make.inc: WINNT aarch64 long double is double

Add to list along with Darwin
---
 Make.inc             | 2 +-
 src/aarch64_fpmath.h | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/Make.inc b/Make.inc
index 3cd1ebe..0c6dd3f 100644
--- a/Make.inc
+++ b/Make.inc
@@ -151,7 +151,7 @@ ifneq ($(filter $(ARCH),i387 amd64),)
 # `long double` is the same as `double`. 
 LONG_DOUBLE_NOT_DOUBLE := 1
 else ifeq ($(ARCH), aarch64)
-ifneq ($(OS),Darwin)
+ifeq ($(filter $(OS),Darwin WINNT),)
 LONG_DOUBLE_NOT_DOUBLE := 1
 endif
 endif
diff --git a/src/aarch64_fpmath.h b/src/aarch64_fpmath.h
index c4e407c..c95ea9b 100644
--- a/src/aarch64_fpmath.h
+++ b/src/aarch64_fpmath.h
@@ -27,18 +27,20 @@
  * $FreeBSD: head/lib/libc/aarch64/_fpmath.h 281197 2015-04-07 09:52:14Z andrew $
  */
 
+#include <stdint.h>
+
 union IEEEl2bits {
 	long double	e;
 	struct {
-		unsigned long	manl	:64;
-		unsigned long	manh	:48;
+		uint64_t	manl	:64;
+		uint64_t	manh	:48;
 		unsigned int	exp	:15;
 		unsigned int	sign	:1;
 	} bits;
 	/* TODO andrew: Check the packing here */
 	struct {
-		unsigned long	manl	:64;
-		unsigned long	manh	:48;
+		uint64_t	manl	:64;
+		uint64_t	manh	:48;
 		unsigned int	expsign	:16;
 	} xbits;
 };
