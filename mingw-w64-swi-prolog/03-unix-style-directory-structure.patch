--- swipl-8.4.3/CMakeLists.txt.old	2022-06-17 10:48:26 +0000
+++ swipl-8.4.3/CMakeLists.txt	2022-06-17 10:49:01 +0000
@@ -104,7 +104,7 @@
 ################
 # Installation directories
 
-if(WIN32)
+if(WIN32 AND NOT MSYS2)
 
   set(SWIPL_INSTALL_DIR "."
       CACHE STRING "Directory below <prefix> for installation")
@@ -118,7 +118,7 @@
   set(SWIPL_TMP_DIR "c:/tmp" CACHE STRING
       "Directory to be used if the environment variable TEMP is not set")
 
-else(WIN32)
+else()
 
   if(SWIPL_VERSIONED_DIR)
     set(SWIPL_INSTALL_DIR_DEF  swipl-${SWIPL_VERSION_STRING})
@@ -153,7 +153,7 @@
 
   set(SWIPL_INSTALL_MODULES  ${SWIPL_INSTALL_PREFIX}/lib/${SWIPL_ARCH})
 
-endif(WIN32)
+endif()
 
 set(SWIPL_CMAKE_NAMESPACE swipl::)
 set(SWIPL_INSTALL_CMAKE_CONFIG_DIR lib/cmake/swipl)
--- swipl-8.4.3/src/CMakeLists.txt.old	2022-06-17 12:01:22 +0000
+++ swipl-8.4.3/src/CMakeLists.txt	2022-06-17 12:00:52 +0000
@@ -670,16 +670,17 @@
	    FILES ${CMAKE_CURRENT_SOURCE_DIR}/swipl.ico
	    DESTINATION ${SWIPL_INSTALL_PREFIX})

-else(WIN32)
+endif()

 if(NOT BUILD_MACOS_BUNDLE)
 # Create symbolic link from public installation dir to executables
 install(DIRECTORY DESTINATION bin)
-ilink(${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl
-      ${CMAKE_INSTALL_PREFIX}/bin/swipl)
-ilink(${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl-ld
-      ${CMAKE_INSTALL_PREFIX}/bin/swipl-ld)
+file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/swipl
+     "#!/usr/bin/bash\n${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl $@\n")
+file(WRITE ${CMAKE_CURRENT_SOURCE_DIR}/swipl-ld
+     "#!/usr/bin/bash\n${CMAKE_INSTALL_PREFIX}/${SWIPL_INSTALL_ARCH_EXE}/swipl-ld $@\n")
+install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/swipl DESTINATION bin)
+install(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/swipl-ld DESTINATION bin)
 endif()

-endif(WIN32)

--- swipl-8.4.3/library/shlib.pl	2022-06-21 13:08:37 +0000
+++ swipl-8.4.3/library/shlib.pl	2022-07-19 22:40:45 +0000
@@ -567,0 +567,20 @@
+:- if(current_predicate(win_add_dll_directory/2)).
+
+% Under MSYS2, the program is invoked from a bash, with the dll
+% dependencies (zlib1.dll etc.) in %MINGW_PREFIX%/bin instead of
+% the installation directory). Here we add this folder to the dll
+% search path. If MINGW_PREFIX is undefined, the directive is
+% skipped.
+
+add_mingw_dll_directory :-
+    (   getenv('MINGW_PREFIX', Prefix)
+    ->  format(atom(Bin), '~w/bin', [Prefix]),
+        win_add_dll_directory(Bin, _)
+    ;   true
+    ).
+ 
+:- initialization(add_mingw_dll_directory).
+
+:- endif.
+
+
                  /*******************************
                  *            MESSAGES          *
                  *******************************/
--- swipl-8.4.3/boot/init.pl	2022-06-21 13:08:37 +0000
+++ src/swipl-8.4.3/boot/init.pl	2022-07-20 14:05:33 +0000
@@ -1043,7 +1043,6 @@
     current_prolog_flag(apple_universal_binary, true),
     ArchLib = 'lib/fat-darwin'.
 user:file_search_path(foreign, swi(ArchLib)) :-
-    \+ current_prolog_flag(windows, true),
     current_prolog_flag(arch, Arch),
     atom_concat('lib/', Arch, ArchLib).
 user:file_search_path(foreign, swi(SoLib)) :-
