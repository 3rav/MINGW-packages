# Maintainer: Some One <some.one@some.email.com>
#
# https://github.com/jupyter/sphinxcontrib_github_alt/archive/refs/tags/1.2.tar.gz
#
_realname=sphinxcontrib-github-alt
pkgbase=mingw-w64-python-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-python-${_realname}")
pkgver=1.2
pkgrel=1
pkgdesc="Link to GitHub issues, pull requests, commits and users from Sphinx docs. (mingw-w64)"
arch=('any')
url='https://github.com/jupyter/sphinxcontrib_github_alt'
license=('BSD')
depends=("${MINGW_PACKAGE_PREFIX}-python")
makedepends=("${MINGW_PACKAGE_PREFIX}-python"
             "${MINGW_PACKAGE_PREFIX}-python-alabaster"
             "${MINGW_PACKAGE_PREFIX}-python-atomicwrites"
             "${MINGW_PACKAGE_PREFIX}-python-babel"
             "${MINGW_PACKAGE_PREFIX}-python-coverage"
             "${MINGW_PACKAGE_PREFIX}-python-docutils"
             "${MINGW_PACKAGE_PREFIX}-python-imagesize"
             "${MINGW_PACKAGE_PREFIX}-python-pluggy"
             "${MINGW_PACKAGE_PREFIX}-python-py"
             "${MINGW_PACKAGE_PREFIX}-python-pygments-github-lexers"
             "${MINGW_PACKAGE_PREFIX}-python-pyparsing"
             "${MINGW_PACKAGE_PREFIX}-python-pyproject2setuppy"
             "${MINGW_PACKAGE_PREFIX}-python-pytest"
             "${MINGW_PACKAGE_PREFIX}-python-pytest-cov"
             "${MINGW_PACKAGE_PREFIX}-python-jinja2"
             "${MINGW_PACKAGE_PREFIX}-python-markupsafe"
             "${MINGW_PACKAGE_PREFIX}-python-testpath"
             "${MINGW_PACKAGE_PREFIX}-python-requests"
             "${MINGW_PACKAGE_PREFIX}-python-pytz"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-applehelp"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-devhelp"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-github-alt"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-htmlhelp"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-jsmath" 
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-qthelp" 
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-serializinghtml" 
             "${MINGW_PACKAGE_PREFIX}-python-six"             
             "${MINGW_PACKAGE_PREFIX}-python-snowballstemmer"
             

             "${MINGW_PACKAGE_PREFIX}-python-tomli"
             "${MINGW_PACKAGE_PREFIX}-python-tomli-w"

            )
source=("${_realname}-${pkgver}.tar.gz"::"$url/archive/refs/tags/${pkgver}.tar.gz")
sha256sums=('7a85ad988f7b7cdc230d58854c31acab1308a75016b9c453bf76bfc0598cbbac')

prepare() {
  cd "${srcdir}/${_realname//-/_}-${pkgver}"
  ## (OPTIONAL) Only if setuptools-scm is used
  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}
}

build() {
  cd "${srcdir}"
  cp -r "${_realname//-/_}-${pkgver}" "python-build-${MSYSTEM}" && cd "python-build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/python -m pyproject2setuppy.main build
}

check() {
  cd "${srcdir}/python-build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/python -m pyproject2setuppy.main check
}

package() {
  cd "${srcdir}/python-build-${MSYSTEM}"

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
    "${MINGW_PREFIX}"/bin/python  -m pyproject2setuppy.main install --prefix="${MINGW_PREFIX}" \
      --root="${pkgdir}" --optimize=1 --skip-build

  install -Dm644 COPYING.md "${pkgdir}${MINGW_PREFIX}/share/licenses/python-${_realname}/LICENSE"
}
