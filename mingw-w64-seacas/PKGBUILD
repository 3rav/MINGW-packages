# Maintainer: Rafa≈Ç Brzegowy <rafal.brzegowy@yahoo.com>

_realname=seacas
_releases=2021-10-11
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=${_releases//-/.}
pkgrel=1
pkgdesc="EXODUS is a model developed to store and retrieve data for finite element analyses (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
conflicts=("${MINGW_PACKAGE_PREFIX}-libexodus"
           "${MINGW_PACKAGE_PREFIX}-trilinos")
depends=("${MINGW_PACKAGE_PREFIX}-crt"
	 "${MINGW_PACKAGE_PREFIX}-metis"
	 "${MINGW_PACKAGE_PREFIX}-matio"
	 "${MINGW_PACKAGE_PREFIX}-netcdf")
makedepends=("unzip"
	     "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cmake")
url="https://gsjaardema.github.io/seacas/"
license=('BSD')
source=("https://github.com/gsjaardema/seacas/archive/refs/tags/v${_releases}.zip")
sha256sums=('5C04D252E1C4A10B037AA352B89487E581EC6B52BDB46E9E85F101BBDCD9C388')
noextract=("v${_releases}.zip") # bsdtar could not unpack this archive

prepare() {  
  rm -rf "${srcdir}/seacas-${_releases}"
  unzip -oq v${_releases}.zip -d ${srcdir}
}

build() {
  #Static Build
  [[ -d "${_realname}-${_releases}/build-${MINGW_CHOST}-static" ]] && rm -rf "${_realname}-${_releases}/build-${MINGW_CHOST}-static"
  mkdir -p "${_realname}-${_releases}/build-${MINGW_CHOST}-static" && cd "${_realname}-${_releases}/build-${MINGW_CHOST}-static"
  
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
      INSTALL_PATH=${MINGW_PREFIX} THREADSAFE=ON ../cmake-config \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=Release \
      -DSEACASProj_ENABLE_Fortran=OFF \
      -DTPL_ENABLE_X11=OFF \
      -DSEACASProj_ENABLE_TESTS=OFF \
      -DBUILD_SHARED_LIBS=OFF

  ${MINGW_PREFIX}/bin/cmake --build .

  #Shared Build
  [[ -d "../build-${MINGW_CHOST}-shared" ]] && rm -rf "../build-${MINGW_CHOST}-shared"
  mkdir -p "../build-${MINGW_CHOST}-shared" && cd "../build-${MINGW_CHOST}-shared"
  
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
      INSTALL_PATH=${MINGW_PREFIX} THREADSAFE=ON ../cmake-config \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      -DCMAKE_BUILD_TYPE=Release \
      -DSEACASProj_ENABLE_Fortran=OFF \
      -DTPL_ENABLE_X11=OFF \
      -DSEACASProj_ENABLE_TESTS=OFF \
      -DBUILD_SHARED_LIBS=YES

  ${MINGW_PREFIX}/bin/cmake --build .
}

package() {
  #Static Install
  cd "${srcdir}/${_realname}-${_releases}/build-${MINGW_CHOST}-static"
  DESTDIR=${pkgdir} cmake --build . --target install
  
  #Shared Install
  cd "${srcdir}/${_realname}-${_releases}/build-${MINGW_CHOST}-shared"
  DESTDIR=${pkgdir} cmake --build . --target install
  install -Dm644 "${srcdir}/${_realname}-${_releases}"/LICENSE ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE
}
