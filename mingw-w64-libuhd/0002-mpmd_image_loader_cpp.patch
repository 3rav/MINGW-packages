--- uhd-4.6.0.0/host/lib/usrp/mpmd/mpmd_image_loader.cpp.orig	2024-05-29 13:42:14.100900200 -0400
+++ uhd-4.6.0.0/host/lib/usrp/mpmd/mpmd_image_loader.cpp	2024-05-29 13:52:08.231614500 -0400
@@ -21,7 +21,6 @@
 #include <boost/algorithm/string.hpp>
 #include <boost/archive/iterators/binary_from_base64.hpp>
 #include <boost/archive/iterators/transform_width.hpp>
-#include <boost/filesystem/convenience.hpp>
 #include <boost/optional.hpp>
 #include <boost/property_tree/xml_parser.hpp>
 #include <cctype>
@@ -271,9 +270,9 @@
     // DTS component struct
     // First, we need to determine the name
     const std::string base_name =
-        boost::filesystem::change_extension(fpga_path, "").string();
+	boost::filesystem::path(fpga_path).replace_extension("").string();
     if (base_name == fpga_path) {
-        const std::string err_msg(
+	const std::string err_msg(
             "Can't cut extension from FPGA filename... " + fpga_path);
         throw uhd::runtime_error(err_msg);
     }
@@ -340,7 +339,7 @@
         UHD_LOG_TRACE("MPMD IMAGE LOADER", "FPGA path: " << fpga_path);
 
         // If the fpga_path is a lvbitx file, parse it as such
-        if (boost::filesystem::extension(fpga_path) == ".lvbitx") {
+        if (boost::filesystem::path(fpga_path).extension() == ".lvbitx") {
             all_component_files = lvbitx_to_component_files(fpga_path, delay_reload);
         } else {
             all_component_files = bin_dts_to_component_files(fpga_path, delay_reload);
