# Maintainer: Konstantin Podsvirov <konstantin@podsvirov.pro>

_realname=asio
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1.28.1
pkgrel=1
pkgdesc='Cross-platform C++ library for ASynchronous network I/O (mingw-w64)'
url='https://think-async.com/Asio/'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64' 'clang32')
license=('spdx:BSL-1.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             #"${MINGW_PACKAGE_PREFIX}-boost"
             #"${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-openssl")
_realver=${pkgver}
_realpath=${_realname}-${_realver}
source=("${_realpath}.tar.gz::https://sourceforge.net/projects/asio/files/asio/${pkgver}%20%28Stable%29/asio-${pkgver}.tar.gz/download")
sha256sums=('eef0eddce419827876f4929c6d7523e010528031e5289ec57914e89fb9ab9d8d')

prepare() {
  # see `build' function
  return 0

  cd ${srcdir}/${_realpath}

  autoreconf -fiv
}

build() {
  # At this time asio fails to compile. Anyways, asio is supposed to
  # be used as a header-only library, with a specific procedure
  # (mentioned on the documentation) for when the user wants separate
  # compilation.
  return 0

  cd ${srcdir}/${_realpath}

  CPPFLAGS+=" -D_WIN32_WINNT=0x601" \
  ./configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --with-boost=no \
    --with-openssl=yes

  make
}

check() {
  cd ${srcdir}/${_realpath}
  # make check
}

package() {
  cd ${srcdir}/${_realpath}
  # make DESTDIR=${pkgdir} install

  dest="${pkgdir}${MINGW_PREFIX}"
  mkdir -p $dest
  rm include/Makefile*
  cp -R include $dest

  install -Dm 644 COPYING LICENSE_1_0.txt -t "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}"
}
