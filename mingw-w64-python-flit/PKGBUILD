# Maintainer: J. Peter Mugaas <jpmugaas@suddenlink.net>

_realname=flit
pkgbase=mingw-w64-python-${_realname}
pkgname=(${MINGW_PACKAGE_PREFIX}-python-$_realname{,-core})
pkgver=3.5.1
pkgrel=1
pkgdesc='Simplified packaging of Python modules (mingw-w64)'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url='https://github.com/takluyver/flit'
license=('BSD')
depends=("${MINGW_PACKAGE_PREFIX}-python"
        "${MINGW_PACKAGE_PREFIX}-python-tomli"
        "${MINGW_PACKAGE_PREFIX}-python-tomli-w")
checkdepends=("${MINGW_PACKAGE_PREFIX}-python-coverage"
              "${MINGW_PACKAGE_PREFIX}-python-responses"
              "${MINGW_PACKAGE_PREFIX}-python-testpath"
              "${MINGW_PACKAGE_PREFIX}-python-pytest"
              "${MINGW_PACKAGE_PREFIX}-python-pytest-cov")
makedepends=("${MINGW_PACKAGE_PREFIX}-python-pygments-github-lexers"
             "${MINGW_PACKAGE_PREFIX}-python-pyproject2setuppy"
             "${MINGW_PACKAGE_PREFIX}-python-sphinx"
             "${MINGW_PACKAGE_PREFIX}-python-sphinx_rtd_theme"
             "${MINGW_PACKAGE_PREFIX}-python-sphinxcontrib-github-alt")           
source=("${_realname}-$pkgver.tar.gz"::"$url/archive/$pkgver.tar.gz")
sha512sums=('76a713df9a85e686b5a9516b01b02779ce9e62e5bb189724d4fb62c42324ce1607d9de334c1fa88e95a10089aebba804fac0214fcbed0c47b8fc057732d63339')

prepare() {

 rm -rf python-build-${MSYSTEM} || true
  cp -r "${_realname}-${pkgver}" "python-build-${MSYSTEM}"

  # Set version for setuptools_scm
  export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}

  cd "${srcdir}/python-build-${MSYSTEM}"
  if [[ -f tests/test_sdist.py ]];then
    rm -f tests/test_sdist.py
  fi
}

build() {
  cd "${srcdir}/python-build-${MSYSTEM}/flit_core"
  msg "Build flit_core"
  ${MINGW_PREFIX}/bin/python -m pyproject2setuppy.main build
  
  cd "${srcdir}/python-build-${MSYSTEM}"
  msg "Build flit"
  PYTHONPATH=flit_core ${MINGW_PREFIX}/bin/python -m pyproject2setuppy.main build
  cd doc
  make dirhtml man
}

check() {
  cd "${srcdir}/python-build-${MSYSTEM}"
# 9 failed, 172 passed, 5 skipped, 1 warning in 13.73s  
  PYTHONPATH=flit_core ${MINGW_PREFIX}/bin/python -m pytest  --cov=flit --cov=flit_core/flit_core || true
}

package_python-flit() {
  pkgdesc+=' (mingw-w64)'
  depends+=("${MINGW_PACKAGE_PREFIX}-python-flit-core"
            "${MINGW_PACKAGE_PREFIX}-python-requests"
            "${MINGW_PACKAGE_PREFIX}-python-docutils")

  cd "${srcdir}/python-build-${MSYSTEM}"
  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
  PYTHONPATH=flit_core \
   ${MINGW_PREFIX}/bin/python -m pyproject2setuppy.main install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build  
  
  install -Dm 644 LICENSE "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}/LICENSE
  
  mkdir -p "$pkgdir${MINGW_PREFIX}"/share/doc/${_realname}
  cp -r doc/_build/dirhtml/* "$pkgdir${MINGW_PREFIX}"/share/doc/${_realname}
  
  mkdir -p "$pkgdir${MINGW_PREFIX}"/share/man/man1
  cp -r doc/_build/man/*.1 "$pkgdir${MINGW_PREFIX}"/share/man/man1
  
  # remove shebang line
  
  for _f in "${pkgdir}${MINGW_PREFIX}"/bin/*-script.py; do
    sed -e '1 { s/^#!.*$// }' -i ${_f}
  done
 
  find "$pkgdir" -name "*.json" -exec \
    sed -e "s|$srcdir||g" -i {} \;  
}

package_python-flit-core() {
  pkgdesc+=' (core backend) (mingw-w64)'

  cd "${srcdir}/python-build-${MSYSTEM}/flit_core"

  MSYS2_ARG_CONV_EXCL="--prefix=;--install-scripts=;--install-platlib=" \
    ${MINGW_PREFIX}/bin/python -m pyproject2setuppy.main install --prefix=${MINGW_PREFIX} \
    --root="${pkgdir}" --optimize=1 --skip-build  
  
  install -Dm 644 ../LICENSE "$pkgdir${MINGW_PREFIX}"/share/licenses/${_realname}-core/LICENSE

  # installing tests to a subdir of your project might not conflict the toplevel, but
  # don't do it anyway...
  rm -rf "$pkgdir"${MINGW_PREFIX}/lib/python*/site-packages/flit_core/tests/
  
  find "$pkgdir" -name "*.json" -exec \
    sed -e "s|$srcdir||g" -i {} \;
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done

