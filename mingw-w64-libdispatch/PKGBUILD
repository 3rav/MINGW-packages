# Maintainer: Frederik Carlier <frederik.carlier@keysight.com>

_realname=libdispatch
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-libblocksruntime-swift")
pkgver=5.9.2
pkgrel=1
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64')
url="https://github.com/apple/swift-corelibs-libdispatch/"
license=('spdx:Apache-2.0')
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-clang"
             "${MINGW_PACKAGE_PREFIX}-lld")
source=("https://github.com/apple/swift-corelibs-libdispatch/archive/refs/tags/swift-${pkgver}-RELEASE.tar.gz"
        # Support compiling on MinGW
        "https://github.com/apple/swift-corelibs-libdispatch/commit/5460cefb493c88f577b8504de5c9718759e04a1b.patch")
sha256sums=('b1f3e46ed248df6a3456d20bc23b2d8a12b740a40185d81b668b1d31735cadf2'
            '8f6da4c8029bfa661a92a3d129625720162faad1ceaa1b37e66fbc545860b569')

prepare() {
  cd ${srcdir}/swift-corelibs-${_realname}-swift-${pkgver}-RELEASE/

  patch -p1 -i ${srcdir}/5460cefb493c88f577b8504de5c9718759e04a1b.patch
}

build() {
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    LDFLAGS+=" -fuse-ld=lld" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      -DCMAKE_C_COMPILER="clang" \
      -DCMAKE_CXX_COMPILER="clang++" \
      -DCMAKE_DLL_NAME_WITH_SOVERSION=ON \
      "${extra_config[@]}" \
      ../swift-corelibs-${_realname}-swift-${pkgver}-RELEASE

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

package_libdispatch() {
  pkgdesc="The libdispatch Project, (a.k.a. Grand Central Dispatch), for concurrency on multicore hardware. (mingw-w64)"
  depends=("${MINGW_PACKAGE_PREFIX}-libblocksruntime-swift")
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .
  rm "${pkgdir}${MINGW_PREFIX}/bin/libBlocksRuntime.dll"
  rm "${pkgdir}${MINGW_PREFIX}/lib/libBlocksRuntime.dll.a"
  rm "${pkgdir}${MINGW_PREFIX}/include/Block.h"

  install -Dm644 "${srcdir}/swift-corelibs-${_realname}-swift-${pkgver}-RELEASE/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}

package_libblocksruntime-swift() {
  pkgdesc="Blocks runtime library for Objective C (mingw-w64). (mingw-w64)"
  conflicts=("${MINGW_PACKAGE_PREFIX}-libblocksruntime")

  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .
  rm "${pkgdir}${MINGW_PREFIX}/bin/libdispatch.dll"
  rm "${pkgdir}${MINGW_PREFIX}/lib/libdispatch.dll.a"
  rm -rf "${pkgdir}${MINGW_PREFIX}/include/dispatch/"
  rm -rf "${pkgdir}${MINGW_PREFIX}/include/os/"
  rm -rf "${pkgdir}${MINGW_PREFIX}/share/man/"

  install -Dm644 "${srcdir}/swift-corelibs-${_realname}-swift-${pkgver}-RELEASE/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/libblocksruntime-swift/LICENSE"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
