diff --git C/AesOpt.c C/AesOpt.c
index af911e2..99800ea 100755
--- C/AesOpt.c
+++ C/AesOpt.c
@@ -576,7 +576,7 @@ VAES_COMPAT_STUB (AesCtr_Code_HW)
 
 #if defined(__clang__) || defined(__GNUC__)
   #ifdef MY_CPU_ARM64
-    #define ATTRIB_AES __attribute__((__target__("+crypto")))
+    #define ATTRIB_AES __attribute__((__target__("crypto")))
   #else
     #define ATTRIB_AES __attribute__((__target__("fpu=crypto-neon-fp-armv8")))
   #endif
@@ -593,6 +593,9 @@ VAES_COMPAT_STUB (AesCtr_Code_HW)
 #if defined(_MSC_VER) && defined(MY_CPU_ARM64)
 #include <arm64_neon.h>
 #else
+#define __ARM_FEATURE_AES
+#define __ARM_FEATURE_SHA2
+#define __ARM_FEATURE_CRYPTO
 #include <arm_neon.h>
 #endif
 
diff --git C/Sha1Opt.c C/Sha1Opt.c
index b47a73a..bb4dd4c 100755
--- C/Sha1Opt.c
+++ C/Sha1Opt.c
@@ -224,7 +224,7 @@ void Z7_FASTCALL Sha1_UpdateBlocks_HW(UInt32 state[5], const Byte *data, size_t
 
 #if defined(__clang__) || defined(__GNUC__)
   #ifdef MY_CPU_ARM64
-    #define ATTRIB_SHA __attribute__((__target__("+crypto")))
+    #define ATTRIB_SHA __attribute__((__target__("crypto")))
   #else
     #define ATTRIB_SHA __attribute__((__target__("fpu=crypto-neon-fp-armv8")))
   #endif
@@ -237,6 +237,9 @@ void Z7_FASTCALL Sha1_UpdateBlocks_HW(UInt32 state[5], const Byte *data, size_t
 #if defined(_MSC_VER) && defined(MY_CPU_ARM64)
 #include <arm64_neon.h>
 #else
+#define __ARM_FEATURE_AES
+#define __ARM_FEATURE_SHA2
+#define __ARM_FEATURE_CRYPTO
 #include <arm_neon.h>
 #endif
 
diff --git C/Sha256Opt.c C/Sha256Opt.c
index 4fccb33..4ed8bfe 100755
--- C/Sha256Opt.c
+++ C/Sha256Opt.c
@@ -224,7 +224,7 @@ void Z7_FASTCALL Sha256_UpdateBlocks_HW(UInt32 state[8], const Byte *data, size_
 
 #if defined(__clang__) || defined(__GNUC__)
   #ifdef MY_CPU_ARM64
-    #define ATTRIB_SHA __attribute__((__target__("+crypto")))
+    #define ATTRIB_SHA __attribute__((__target__("crypto")))
   #else
     #define ATTRIB_SHA __attribute__((__target__("fpu=crypto-neon-fp-armv8")))
   #endif
@@ -237,6 +237,10 @@ void Z7_FASTCALL Sha256_UpdateBlocks_HW(UInt32 state[8], const Byte *data, size_
 #if defined(_MSC_VER) && defined(MY_CPU_ARM64)
 #include <arm64_neon.h>
 #else
+
+#define __ARM_FEATURE_AES
+#define __ARM_FEATURE_SHA2
+#define __ARM_FEATURE_CRYPTO
 #include <arm_neon.h>
 #endif
 
